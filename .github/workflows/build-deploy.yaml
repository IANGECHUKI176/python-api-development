name: Build and Deploy python-api-dev

on: [ push, pull_request ]

jobs:
  job1:
    environment:
      testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      TEST_DATABASE_HOSTNAME: ${{ secrets.TEST_DATABASE_HOSTNAME }}
      TEST_DATABASE_PORT: ${{ secrets.TEST_DATABASE_PORT }}
      TEST_DATABASE_NAME: ${{ secrets.TEST_DATABASE_NAME }}
      TEST_DATABASE_USERNAME: ${{ secrets.TEST_DATABASE_USERNAME }}
      TEST_DATABASE_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
    services:
      postgres:
        image: postgres
        env:
            POSTGRES_USER: ${{ secrets.TEST_DATABASE_USERNAME }}
            POSTGRES_PASSWORD: ${{ secrets.TEST_DATABASE_PASSWORD }}
            POSTGRES_DB: ${{ secrets.TEST_DATABASE_NAME }}
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: say hi to ian
        run: echo "Hi Ian"
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install all dependencies
        run: pip install -r requirements.txt
      - name: run test with pytest
        run: |
          pip install pytest
          pip install requests
          pytest
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/python-api-dev:latest